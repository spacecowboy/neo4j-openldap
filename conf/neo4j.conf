#*****************************************************************
# Neo4j configuration
#*****************************************************************


# This setting constrains all `LOAD CSV` import files to be under the `import` directory. Remove or uncomment it to
# allow files to be loaded from anywhere in the filesystem; this introduces possible security problems. See the `LOAD
# CSV`
# section of the manual for details.
dbms.directories.import=import

# Whether requests to Neo4j are authenticated.
# To disable authentication, uncomment this line
dbms.security.auth_enabled=true
# Choose LDAP connector as security provider for both authentication and authorization
dbms.security.realm=ldap
# Turn off native users and turn on LDAP
dbms.security.realms.native.authentication=false
dbms.security.realms.native.authorization=false
dbms.security.realms.ldap.authentication=true
dbms.security.realms.ldap.authorization=true

# Configure LDAP to point to the AD server
#dbms.security.realms.ldap.host=ldap://ldapserver
dbms.security.realms.ldap.host=ldapserver

# LDAP authentication:
# Set the template mapping usernames to LDAP distinguished names
# (The special placeholder {0} will be substituted for the username)
dbms.security.realms.ldap.user_dn_template=uid={0},ou=people,dc=example,dc=org

# LDAP authorization:
# Authorization is performed by searching the directory for the groups that
# the user is a member of, and then map those groups to Neo4j roles.
#dbms.security.realms.ldap.authorization.use_system_account=false

# Provide details on user structure within the LDAP system:
dbms.security.realms.ldap.authorization.user_search_base=ou=people,dc=example,dc=org

dbms.security.realms.ldap.authorization.user_search_filter=(&(objectClass=*)(uid={0}))
#dbms.security.realms.ldap.authorization.group_membership_attributes=gidnumber
dbms.security.realms.ldap.authorization.group_membership_attributes=memberOf

# Configure a mapping from OpenLDAP groups to Neo4j roles
#dbms.security.realms.ldap.authorization.group_to_role_mapping=\
#  101 = reader ;\
#  102 = publisher ;\
#  103 = architect ;\
#  104 = admin ;\
#  105 = allowed_role

# Configure the actual mapping between groups in the LDAP system and roles in Neo4j
dbms.security.realms.ldap.authorization.group_to_role_mapping=\
 "CN=Neo4j Read Only,CN=Users,DC=neo4j,DC=com" = reader ;\
 "CN=Neo4j Read-Write,CN=Users,DC=neo4j,DC=com" = publisher ;\
 "CN=Neo4j Schema Manager,CN=Users,DC=neo4j,DC=com" = architect ;\
 "cn=mygroup,ou=groups,dc=example,dc=org" = admin ;\
 "CN=Neo4j Procedures,CN=Users,DC=neo4j,DC=com" = allowed_role

# In case the defined users are not allowed to search for themselves and their own
# group membership in the directory, we can specify credentials for a
# special system account user with read access to all the users in the directory,
# that will then be used to perform the authorization searches.
# NOTE: This account can have read-only access to the relevant parts of the LDAP directory
# and does not need to have access rights to Neo4j or any other systems.
dbms.security.realms.ldap.authorization.use_system_account=true
dbms.security.realms.ldap.system_username=cn=admin,dc=example,dc=org
dbms.security.realms.ldap.system_password=admin

# Setting the following parameter to `true` will enable secure LDAP connections by "Opportunistic TLS".
# An initial insecure connection on the default port is upgraded to a secure connection using TLS.
# "Opportunistic TLS" refers to extensions in plain text communication protocols,
# which offer a way to upgrade a plain text connection to an encrypted (TLS or SSL) connection
# instead of using a separate port for encrypted communication.
#dbms.security.realms.ldap.use_starttls=false
# Turn on authentication caching to ensure performance
#dbms.security.realms.authentication_cache_enabled=true
#dbms.security.realms.auth_cache_ttl=10m

#*****************************************************************
# Network connector configuration
#*****************************************************************

# With default configuration Neo4j only accepts local connections.
# To accept non-local connections, uncomment this line:
dbms.connectors.default_listen_address=0.0.0.0

# You can also choose a specific network interface, and configure a non-default
# port for each connector, by setting their individual listen_address.

# Neo4j advertises the addresses its connectors.
# To specify the hostname or IP address of this server used in the advertised addresses,
# change this to the address of the network adapter you want to advertise.
#dbms.connectors.default_advertised_hostname=localhost

# You can also choose a specific advertised hostname or IP address, and
# configure an advertised port for each connector, by setting their
# individual advertised_address.

# Bolt connector
dbms.connector.bolt.type=BOLT
dbms.connector.bolt.enabled=true
#dbms.connector.bolt.tls_level=OPTIONAL
dbms.connector.bolt.listen_address=0.0.0.0:7687

# HTTP Connector
dbms.connector.http.type=HTTP
dbms.connector.http.enabled=true
dbms.connector.http.listen_address=0.0.0.0:7474

# HTTPS Connector
dbms.connector.https.type=HTTP
dbms.connector.https.enabled=true
dbms.connector.https.encryption=TLS
dbms.connector.https.listen_address=:7473


#********************************************************************
# JVM Parameters
#********************************************************************

# G1GC generally strikes a good balance between throughput and tail
# latency, without too much tuning.
dbms.jvm.additional=-XX:+UseG1GC

# Have common exceptions keep producing stack traces, so they can be
# debugged regardless of how often logs are rotated.
dbms.jvm.additional=-XX:-OmitStackTraceInFastThrow

# Make sure that `initmemory` is not only allocated, but committed to
# the process, before starting the database. This reduces memory
# fragmentation, increasing the effectiveness of transparent huge
# pages. It also reduces the possibility of seeing performance drop
# due to heap-growing GC events, where a decrease in available page
# cache leads to an increase in mean IO response time.
# Try reducing the heap memory, if this flag degrades performance.
dbms.jvm.additional=-XX:+AlwaysPreTouch

# Trust that non-static final fields are really final.
# This allows more optimizations and improves overall performance.
# NOTE: Disable this if you use embedded mode, or have extensions or dependencies that may use reflection or
# serialization to change the value of final fields!
dbms.jvm.additional=-XX:+UnlockExperimentalVMOptions
dbms.jvm.additional=-XX:+TrustFinalNonStaticFields

# Disable explicit garbage collection, which is occasionally invoked by the JDK itself.
dbms.jvm.additional=-XX:+DisableExplicitGC

# Remote JMX monitoring, uncomment and adjust the following lines as needed.
# Also make sure to update the jmx.access and jmx.password files with appropriate permission roles and passwords,
# the shipped configuration contains only a read only role called 'monitor' with password 'Neo4j'.
# For more details, see: http://download.oracle.com/javase/8/docs/technotes/guides/management/agent.html
# On Unix based systems the jmx.password file needs to be owned by the user that will run the server,
# and have permissions set to 0600.
# For details on setting these file permissions on Windows see:
#     http://docs.oracle.com/javase/8/docs/technotes/guides/management/security-windows.html
#dbms.jvm.additional=-Dcom.sun.management.jmxremote.port=3637
#dbms.jvm.additional=-Dcom.sun.management.jmxremote.authenticate=true
#dbms.jvm.additional=-Dcom.sun.management.jmxremote.ssl=false
#dbms.jvm.additional=-Dcom.sun.management.jmxremote.password.file=conf/jmx.password
#dbms.jvm.additional=-Dcom.sun.management.jmxremote.access.file=conf/jmx.access

# Some systems cannot discover host name automatically, and need this line configured:
#dbms.jvm.additional=-Djava.rmi.server.hostname=$THE_NEO4J_SERVER_HOSTNAME

# Expand Diffie Hellman (DH) key size from default 1024 to 2048 for DH-RSA cipher suites used in server TLS handshakes.
# This is to protect the server from any potential passive eavesdropping.
dbms.jvm.additional=-Djdk.tls.ephemeralDHKeySize=2048

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
dbms.windows_service_name=neo4j

#********************************************************************
# Other Neo4j system properties
#********************************************************************
dbms.jvm.additional=-Dunsupported.dbms.udc.source=tarball
